{"version":3,"sources":["redux/constants/userConstants.js","redux/actions/userActions.js","components/Header/Header.js","media/images/logo.png","components/LandingPage/LandingPage.js","components/Footer/Footer.js","components/IssueTracker/IssueTracker.js","redux/constants/issuesConstants.js","redux/actions/issuesActions.js","components/Loading.js","components/ErrorMessage.js","components/CurrentIssue/CurrentIssue.js","components/AddIssue/AddIssue.js","components/UpdateIssue/UpdateIssue.js","components/MyIssues/MyIssues.js","components/CompletedIssues/CompletedIssues.js","components/LoginErrorMessage.js","components/Login/Login.js","components/RegisterErrorMessage.js","components/Register/Register.js","components/Profile/Profile.js","App.js","store.js","redux/reducers/userReducers.js","redux/reducers/issuesReducer.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","firstName","lastName","userName","userInfo","getItem","history","useHistory","push","updateProfile","user","getState","userLogin","Authorization","token","Header","setSearch","useDispatch","useState","isOpen","setIsOpen","useSelector","state","logoutHandler","removeItem","Navbar","className","dark","expand","Container","Nav","to","NavbarToggler","onClick","Collapse","navbar","FormGroup","Input","placeholder","onChange","event","target","value","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","Button","outline","color","ButtonGroup","LandingPage","useEffect","Row","src","Logo","alt","Footer","style","width","position","bottom","display","justifyContent","Col","IssueTracker","children","title","userRoll","setUserRoll","isAdmin","isDev","CURRENT_ISSUES_REQUEST","CURRENT_ISSUES_SUCCESS","CURRENT_ISSUES_FAIL","ISSUE_CREATE_REQUEST","ISSUE_CREATE_SUCCESS","ISSUE_CREATE_FAIL","ISSUE_UPDATE_REQUEST","ISSUE_UPDATE_SUCCESS","ISSUE_UPDATE_FAIL","ISSUE_DELETE_REQUEST","ISSUE_DELETE_SUCCESS","ISSUE_DELETE_FAIL","listIssuesAction","get","Loading","alignItems","height","Spinner","ErrorMessage","visible","setVisible","timeId","setTimeout","clearTimeout","Alert","textAlign","CurrentIssue","search","currentIssues","loading","issues","error","successCreate","issueCreate","success","successUpdate","issueUpdate","size","Card","filter","filteredIssue","description","toLowerCase","includes","map","issue","CardText","forDev","_id","priority","CardSubtitle","createdAt","substring","updatedAt","AddIssue","setDescription","setForDev","setPriority","Form","onSubmit","preventDefault","createIssueAction","Label","for","name","id","autoComplete","e","disabled","UpdateIssue","match","isCompleted","setIsCompleted","date","setDate","issueDelete","loadingDelete","errorDelete","deleteHandler","window","confirm","delete","deleteIssueAction","fetching","params","put","updateIssueAction","check","checked","MyIssues","CompletedIssues","LoginErrorMessage","go","clear","Login","setEmail","setPassword","submitHandler","autoFocus","RegisterErrorMessage","Register","setFirstName","setLastName","setUserName","confirmPassword","setConfirmPassword","setMessage","userRegister","Profile","userUpdate","App","console","log","path","component","exact","appReducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","undefined","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4454f760.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register =\r\n  (firstName, lastName, userName, email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/users\",\r\n        { firstName, lastName, userName, email, password },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n      const userInfo = localStorage.getItem(\"userInfo\");\r\n      const history = useHistory();\r\n      if (userInfo) {\r\n        history.push(\"/issues\");\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/users/profile\", user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Button,\r\n  ButtonGroup,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  NavbarToggler,\r\n  Collapse,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../redux/actions/userActions\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ setSearch }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const authButton = () => {\r\n    if (!userInfo) {\r\n      return (\r\n        <ButtonGroup>\r\n          <Link to=\"/login\">\r\n            <Button className=\"mx-1\" outline color=\"success\">\r\n              Login\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/register\">\r\n            <Button className=\"mx-1\" outline color=\"info\">\r\n              Register\r\n            </Button>\r\n          </Link>\r\n        </ButtonGroup>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button className=\"mx-1\" outline color=\"danger\" onClick={logoutHandler}>\r\n          Logout\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const myProfile = () => {\r\n    if (!userInfo) {\r\n      return;\r\n    } else {\r\n      return (\r\n        <Nav>\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle className=\"navlink\" nav caret>\r\n              {userInfo?.userName}\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem>\r\n                <Link className=\"dropdown-item\" to=\"/profile\">\r\n                  My Profile\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Link className=\"dropdown-item\" to=\"/issues\">\r\n                  Current Issues\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Link className=\"dropdown-item\" to=\"/addIssue\">\r\n                  Add Issue\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Link className=\"dropdown-item\" to=\"/myIssues\">\r\n                  My Issues\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Link className=\"dropdown-item\" to=\"/completedIssues\">\r\n                  Completed Issues\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={logoutHandler}>Logout</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"navbar mt-2\" dark expand=\"lg\">\r\n      <Container>\r\n        <Nav>\r\n          <Link className=\"brand\" to=\"/\">\r\n            Issue Tracker\r\n          </Link>\r\n        </Nav>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\r\n          <FormGroup className=\"pt-3 pb-3 m-auto\">\r\n            <Input\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={(event) => setSearch(event.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <Nav>\r\n            <Nav>{myProfile()}</Nav>\r\n            <Nav>{authButton()}</Nav>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/logo.75df1643.png\";","import React, { useEffect } from \"react\";\r\nimport { Container, Row } from \"reactstrap\";\r\n\r\nimport Logo from \"../../media/images/logo.png\";\r\nimport \"./LandingPage.css\";\r\n\r\nfunction LandingPage({ history }) {\r\n  useEffect(() => {\r\n    const userInfo = localStorage.getItem(\"userInfo\");\r\n\r\n    if (userInfo) {\r\n      history.push(\"/issues\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"row\">\r\n            <img src={Logo} className=\"logo\" alt=\"logo\" />\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      style={{\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        bottom: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">\r\n            Copyright &copy; Issue Tracker by Flexxall\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Row } from \"reactstrap\";\r\n\r\nfunction IssueTracker({ children, title }) {\r\n  const [userRoll, setUserRoll] = useState([]);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo.isAdmin === true) {\r\n      setUserRoll(\"Administrator\");\r\n    } else if (userInfo.isDev === true) {\r\n      setUserRoll(\"Developer\");\r\n    } else {\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Row>\r\n      <div>\r\n        {title && (\r\n          <>\r\n            <h1 className=\"heading\">{title}</h1>\r\n            <div className=\"brand\">{userRoll}</div>\r\n            <hr />\r\n          </>\r\n        )}\r\n        {children}\r\n      </div>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default IssueTracker;\r\n","export const CURRENT_ISSUES_REQUEST = \"CURRENT_ISSUES_REQUEST\";\r\nexport const CURRENT_ISSUES_SUCCESS = \"CURRENT_ISSUES_SUCCESS\";\r\nexport const CURRENT_ISSUES_FAIL = \"CURRENT_ISSUES_FAIL\";\r\n\r\nexport const ISSUE_CREATE_REQUEST = \"ISSUE_CREATE_REQUEST\";\r\nexport const ISSUE_CREATE_SUCCESS = \"ISSUE_CREATE_SUCCESS\";\r\nexport const ISSUE_CREATE_FAIL = \"ISSUE_CREATE_FAIL\";\r\n\r\nexport const ISSUE_UPDATE_REQUEST = \"ISSUE_UPDATE_REQUEST\";\r\nexport const ISSUE_UPDATE_SUCCESS = \"ISSUE_UPDATE_SUCCESS\";\r\nexport const ISSUE_UPDATE_FAIL = \"ISSUE_UPDATE_FAIL\";\r\n\r\nexport const ISSUE_DELETE_REQUEST = \"ISSUE_DELETE_REQUEST\";\r\nexport const ISSUE_DELETE_SUCCESS = \"ISSUE_DELETE_SUCCESS\";\r\nexport const ISSUE_DELETE_FAIL = \"ISSUE_DELETE_FAIL\";\r\n","import axios from \"axios\";\r\nimport {\r\n  CURRENT_ISSUES_REQUEST,\r\n  CURRENT_ISSUES_SUCCESS,\r\n  CURRENT_ISSUES_FAIL,\r\n  ISSUE_CREATE_REQUEST,\r\n  ISSUE_CREATE_SUCCESS,\r\n  ISSUE_CREATE_FAIL,\r\n  ISSUE_UPDATE_REQUEST,\r\n  ISSUE_UPDATE_SUCCESS,\r\n  ISSUE_UPDATE_FAIL,\r\n  ISSUE_DELETE_REQUEST,\r\n  ISSUE_DELETE_SUCCESS,\r\n  ISSUE_DELETE_FAIL,\r\n} from \"../constants/issuesConstants\";\r\n\r\nexport const listIssuesAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CURRENT_ISSUES_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/issues`, config);\r\n\r\n    dispatch({\r\n      type: CURRENT_ISSUES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CURRENT_ISSUES_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const createIssueAction =\r\n  (description, forDev, priority) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ISSUE_CREATE_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/issues/create`,\r\n        { description, forDev, priority },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ISSUE_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ISSUE_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\nexport const updateIssueAction =\r\n  (id, description, forDev, priority, isCompleted) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ISSUE_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/issues/${id}`,\r\n        { description, forDev, priority, isCompleted },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ISSUE_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ISSUE_UPDATE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\nexport const deleteIssueAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ISSUE_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/issues/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ISSUE_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: ISSUE_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Spinner children=\"\" color=\"secondary\"></Spinner>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nconst ErrorMessage = ({ color = \"info\", children }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const timeId = setTimeout(() => {\r\n      setVisible(false);\r\n      history.push(\"/issues\");\r\n    }, 5000);\r\n    return () => {\r\n      clearTimeout(timeId);\r\n    };\r\n  }, [history]);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Alert\r\n        className=\"col-sm-6 m-auto\"\r\n        style={{ textAlign: \"center\" }}\r\n        color={color}\r\n        isOpen={visible}\r\n      >\r\n        <strong>{children}</strong>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport IssueTracker from \"../../components/IssueTracker/IssueTracker\";\r\nimport { Row, Col, Card, CardText, CardSubtitle, Button } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { listIssuesAction } from \"../../redux/actions/issuesActions\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\n\r\nimport \"./CurrentIssue.css\";\r\n\r\nfunction CurrentIssue({ search }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const currentIssues = useSelector((state) => state.currentIssues);\r\n  const { loading, issues, error } = currentIssues;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const issueCreate = useSelector((state) => state.issueCreate);\r\n  const { success: successCreate } = issueCreate;\r\n\r\n  const issueUpdate = useSelector((state) => state.issueUpdate);\r\n  const { success: successUpdate } = issueUpdate;\r\n\r\n  useEffect(() => {\r\n    dispatch(listIssuesAction());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, successCreate, history, userInfo, successUpdate]);\r\n\r\n  return (\r\n    <div className=\"issue-container\">\r\n      <IssueTracker title=\"Current Issues\">\r\n        <Link to=\"/addIssue\">\r\n          <Button className=\"mx-2 mb-3\" color=\"warning\" size=\"sm\">\r\n            Add New Issue\r\n          </Button>\r\n        </Link>\r\n        <Card className=\"current-issues\">\r\n          {error && <ErrorMessage color=\"danger\">{error}</ErrorMessage>}\r\n          {loading && <Loading />}\r\n          {issues &&\r\n            issues\r\n              .filter((filteredIssue) =>\r\n                filteredIssue.description\r\n                  .toLowerCase()\r\n                  .includes(search.toLowerCase())\r\n              )\r\n              .map((issue) => (\r\n                <Card key={issue._id} className=\"mb-2\">\r\n                  <Row className=\"pt-1 px-2\">\r\n                    <Col>\r\n                      <CardText>\r\n                        Assigned to: <span>{issue.forDev}</span>\r\n                      </CardText>\r\n                    </Col>\r\n                    <Col>\r\n                      <Link to={`/issue/${issue._id}`}>\r\n                        <Button\r\n                          className=\"edit-button float-end\"\r\n                          color=\"warning\"\r\n                          size=\"sm\"\r\n                        >\r\n                          Edit Issue\r\n                        </Button>\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"pt-1 pb-2 px-2\">\r\n                    <CardText>\r\n                      Priority: <span>{issue.priority}</span>\r\n                    </CardText>\r\n                  </Row>\r\n                  <Row className=\"pt-1 px-2\">\r\n                    <CardSubtitle className=\"text-left\">\r\n                      Description\r\n                    </CardSubtitle>\r\n                  </Row>\r\n                  <Row className=\"pt-2\">\r\n                    <CardText className=\"description-text\">\r\n                      {issue.description}\r\n                    </CardText>\r\n                  </Row>\r\n                  <Row className=\"pt-2\">\r\n                    <footer className=\"footer\">\r\n                      Created on {issue.createdAt.substring(0, 10)} / Updated on\r\n                      {issue.updatedAt.substring(0, 10)}\r\n                    </footer>\r\n                  </Row>\r\n                </Card>\r\n              ))}\r\n        </Card>\r\n      </IssueTracker>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentIssue;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Row, Col, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createIssueAction } from \"../../redux/actions/issuesActions\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport IssueTracker from \"../IssueTracker/IssueTracker\";\r\n\r\nimport \"./AddIssue.css\";\r\n\r\nfunction AddIssue({ history }) {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [forDev, setForDev] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const issueCreate = useSelector((state) => state.issueCreate);\r\n  const { loading, error } = issueCreate;\r\n\r\n  const resetHandler = () => {\r\n    setDescription(\"\");\r\n    setForDev(\"\");\r\n    setPriority(\"\");\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(createIssueAction(description, forDev, priority));\r\n    if (!description || !forDev || !priority) return;\r\n\r\n    resetHandler();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"issue-container\">\r\n      <IssueTracker title=\"Add Issue\"></IssueTracker>\r\n      <Form onSubmit={submitHandler}>\r\n        {error && <ErrorMessage color=\"danger\">{error}</ErrorMessage>}\r\n        <FormGroup>\r\n          <Label for=\"description\">Description</Label>\r\n          <Input\r\n            className=\"input\"\r\n            name=\"description\"\r\n            value={description}\r\n            id=\"description\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Description of Issue...\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"forDev\">Assign To</Label>\r\n          <Input\r\n            className=\"input\"\r\n            name=\"forDev\"\r\n            value={forDev}\r\n            type=\"select\"\r\n            id=\"forDev\"\r\n            onChange={(e) => setForDev(e.target.value)}\r\n          >\r\n            <option disabled={true} value=\"\">\r\n              --Select a Developer--\r\n            </option>\r\n            <option>Steve</option>\r\n            <option>Terri</option>\r\n            <option>Tiffany</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"priority\">Priority Level</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"priority\"\r\n            value={priority}\r\n            id=\"priority\"\r\n            onChange={(e) => setPriority(e.target.value)}\r\n          >\r\n            <option disabled={true} value=\"\">\r\n              --Select a Level--\r\n            </option>\r\n            <option>Low</option>\r\n            <option>Medium</option>\r\n            <option>High</option>\r\n            <option>Emergency</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <Row className=\"add-issue pt-4\">\r\n          <Col className=\"text-center\">\r\n            {loading && <Loading />}\r\n            <Button type=\"submit\" color=\"info\" className=\" mt-3 mb-2\">\r\n              Add\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddIssue;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteIssueAction,\r\n  updateIssueAction,\r\n} from \"../../redux/actions/issuesActions\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\n\r\nimport \"./UpdateIssue.css\";\r\nimport IssueTracker from \"../IssueTracker/IssueTracker\";\r\n\r\nfunction UpdateIssue({ match, history }) {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [forDev, setForDev] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"\");\r\n  const [isCompleted, setIsCompleted] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const issueUpdate = useSelector((state) => state.issueUpdate);\r\n  const { loading, error, success } = issueUpdate;\r\n\r\n  const issueDelete = useSelector((state) => state.issueDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = issueDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteIssueAction(id));\r\n    }\r\n    history.push(\"/issues\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/issues/${match.params.id}`);\r\n\r\n      setDescription(data.description);\r\n      setForDev(data.forDev);\r\n      setPriority(data.priority);\r\n      setIsCompleted(data.isCompleted);\r\n      setDate(data.updatedAt);\r\n    };\r\n    fetching();\r\n  }, [match.params.id]);\r\n\r\n  const resetHandler = () => {\r\n    setDescription(\"\");\r\n    setForDev(\"\");\r\n    setPriority(\"\");\r\n  };\r\n\r\n  const updateHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      updateIssueAction(\r\n        match.params.id,\r\n        description,\r\n        forDev,\r\n        priority,\r\n        isCompleted\r\n      )\r\n    );\r\n    if (!description || !forDev || !priority) return;\r\n    resetHandler();\r\n  };\r\n\r\n  return (\r\n    <div className=\"issue-container\">\r\n      <IssueTracker title=\"Update Issue\"></IssueTracker>\r\n      <Card>\r\n        <Row className=\"pt-1 px-2\">\r\n          <Col>\r\n            <Form onSubmit={updateHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage color=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage color=\"danger\">{error}</ErrorMessage>}\r\n\r\n              {errorDelete && (\r\n                <ErrorMessage color=\"danger\">{errorDelete}</ErrorMessage>\r\n              )}\r\n              {loadingDelete && <Loading />}\r\n              <FormGroup check className=\"checkbox\">\r\n                <Label check>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    className=\"p-2\"\r\n                    checked={isCompleted}\r\n                    onChange={(e) => setIsCompleted(e.target.checked)}\r\n                  />\r\n                  <h2>Issue Complete</h2>\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"description\">Description</Label>\r\n                <Input\r\n                  className=\"input\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  id=\"description\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Description of Issue...\"\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"forDev\">Assign To</Label>\r\n                <Input\r\n                  className=\"input\"\r\n                  name=\"forDev\"\r\n                  value={forDev}\r\n                  type=\"select\"\r\n                  id=\"forDev\"\r\n                  onChange={(e) => setForDev(e.target.value)}\r\n                >\r\n                  <option disabled={true} value=\"\">\r\n                    --Select a Developer--\r\n                  </option>\r\n                  <option>Steve</option>\r\n                  <option>Terri</option>\r\n                  <option>Tiffany</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"priority\">Priority Level</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"priority\"\r\n                  value={priority}\r\n                  id=\"priority\"\r\n                  onChange={(e) => setPriority(e.target.value)}\r\n                >\r\n                  <option disabled={true} value=\"\">\r\n                    --Select a Level--\r\n                  </option>\r\n                  <option>Low</option>\r\n                  <option>Medium</option>\r\n                  <option>High</option>\r\n                  <option>Emergency</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <Row className=\"pt-2\">\r\n                <footer className=\"footer\">\r\n                  Updated on {date.substring(0, 10)}\r\n                </footer>\r\n              </Row>\r\n              <Row className=\"complete-update\">\r\n                <Col className=\"btn-row\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"info\"\r\n                    className=\"complete-btn mt-3 mb-3\"\r\n                  >\r\n                    Update Issue\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"danger\"\r\n                    className=\"complete-btn mt-3 mb-3\"\r\n                    onClick={() => deleteHandler(match.params.id)}\r\n                  >\r\n                    Delete Issue\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateIssue;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Card, CardText, CardSubtitle, Button } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listIssuesAction } from \"../../redux/actions/issuesActions\";\r\nimport IssueTracker from \"../../components/IssueTracker/IssueTracker\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\n\r\nimport \"../CurrentIssue/CurrentIssue.css\";\r\n\r\nfunction MyIssues({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentIssues = useSelector((state) => state.currentIssues);\r\n  const { loading, issues, error } = currentIssues;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(listIssuesAction());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <div className=\"issue-container\">\r\n      <IssueTracker title=\"My Issues\">\r\n        <Card className=\"current-issues\">\r\n          {error && <ErrorMessage color=\"danger\">{error}</ErrorMessage>}\r\n          {loading && <Loading />}\r\n          {issues &&\r\n            issues\r\n              ?.filter((filteredIssue) => filteredIssue.user === userInfo._id)\r\n              .map((issue) => (\r\n                <Card key={issue._id} className=\"mb-2\">\r\n                  <Row className=\"pt-1 px-2\">\r\n                    <Col>\r\n                      <CardText>\r\n                        Assigned to: <span>{issue.forDev}</span>\r\n                      </CardText>\r\n                    </Col>\r\n                    <Col>\r\n                      <Link to={`/issue/${issue._id}`}>\r\n                        <Button\r\n                          className=\"edit-button float-end\"\r\n                          color=\"warning\"\r\n                          size=\"sm\"\r\n                        >\r\n                          Edit Issue\r\n                        </Button>\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"pt-1 pb-2 px-2\">\r\n                    <CardText>\r\n                      Priority: <span>{issue.priority}</span>\r\n                    </CardText>\r\n                  </Row>\r\n                  <Row className=\"pt-1 px-2\">\r\n                    <CardSubtitle className=\"text-left\">\r\n                      Description\r\n                    </CardSubtitle>\r\n                  </Row>\r\n                  <Row className=\"pt-2\">\r\n                    <CardText className=\"description-text\">\r\n                      {issue.description}\r\n                    </CardText>\r\n                  </Row>\r\n                  <Row className=\"pt-2\">\r\n                    <footer className=\"footer\">\r\n                      Created on {issue.createdAt.substring(0, 10)} / Updated on\r\n                      {issue.updatedAt.substring(0, 10)}\r\n                    </footer>\r\n                  </Row>\r\n                </Card>\r\n              ))}\r\n        </Card>\r\n      </IssueTracker>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyIssues;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Card, CardSubtitle, CardText, Col, Row } from \"reactstrap\";\r\nimport IssueTracker from \"../IssueTracker/IssueTracker\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listIssuesAction } from \"../../redux/actions/issuesActions\";\r\n\r\nconst CompletedIssues = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentIssues = useSelector((state) => state.currentIssues);\r\n  const { loading, issues, error } = currentIssues;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(listIssuesAction());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <div className=\"issue-container\">\r\n      <IssueTracker title=\"My Issues\">\r\n        <Card className=\"current-issues\">\r\n          {error && <ErrorMessage color=\"danger\">{error}</ErrorMessage>}\r\n          {loading && <Loading />}\r\n          {issues &&\r\n            issues\r\n              ?.filter((filteredIssue) => filteredIssue.isCompleted === true)\r\n              .map((issue) => (\r\n                <Card key={issue._id} className=\"mb-2\">\r\n                  <Row className=\"pt-1 px-2\">\r\n                    <Col>\r\n                      <CardText>\r\n                        Assigned to: <span>{issue.forDev}</span>\r\n                      </CardText>\r\n                    </Col>\r\n                    <Col>\r\n                      <Link to={`/issue/${issue._id}`}>\r\n                        <Button\r\n                          className=\"edit-button float-end\"\r\n                          color=\"warning\"\r\n                          size=\"sm\"\r\n                        >\r\n                          Edit Issue\r\n                        </Button>\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"pt-1 pb-2 px-2\">\r\n                    <CardText>\r\n                      Priority: <span>{issue.priority}</span>\r\n                    </CardText>\r\n                  </Row>\r\n                  <Row className=\"pt-1 px-2\">\r\n                    <CardSubtitle className=\"text-left\">\r\n                      Description\r\n                    </CardSubtitle>\r\n                  </Row>\r\n                  <Row className=\"pt-2\">\r\n                    <CardText className=\"description-text\">\r\n                      {issue.description}\r\n                    </CardText>\r\n                  </Row>\r\n                  <Row className=\"pt-2\">\r\n                    <footer className=\"footer\">\r\n                      Created on {issue.createdAt.substring(0, 10)} / Updated on{\" \"}\r\n                      {issue.updatedAt.substring(0, 10)}\r\n                    </footer>\r\n                  </Row>\r\n                </Card>\r\n              ))}\r\n        </Card>\r\n      </IssueTracker>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedIssues;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nconst LoginErrorMessage = ({ color = \"info\", children }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const timeId = setTimeout(() => {\r\n      setVisible(false);\r\n      history.go(\"/\");\r\n      localStorage.clear();\r\n    }, 5000);\r\n    return () => {\r\n      clearTimeout(timeId);\r\n    };\r\n  }, [history]);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Alert\r\n        className=\"col-sm-6 m-auto\"\r\n        style={{ textAlign: \"center\" }}\r\n        color={color}\r\n        isOpen={visible}\r\n      >\r\n        <strong>{children}</strong>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginErrorMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from \"reactstrap\";\r\nimport Loading from \"../Loading\";\r\nimport LoginErrorMessage from \"../LoginErrorMessage\";\r\nimport { login } from \"../../redux/actions/userActions\";\r\nimport Logo from \"../../media/images/logo.png\";\r\n\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/issues\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Row className=\"logo-button\">\r\n        <Col>\r\n          <Link to=\"/\">\r\n            <img src={Logo} className=\"logo-sm\" alt=\"logo\" />\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      {error && <LoginErrorMessage color=\"danger\">{error}</LoginErrorMessage>}\r\n      {loading && <Loading />}\r\n      <Form className=\"login\" onSubmit={submitHandler}>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup>\r\n              <Label className=\"label\">Email</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                id=\"email\"\r\n                value={email}\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"label\">Password</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                id=\"password\"\r\n                value={password}\r\n                autoComplete=\"off\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Col className=\"register-button\">\r\n          <Button type=\"submit\" color=\"info\" className=\"mt-4\">\r\n            Login\r\n          </Button>\r\n        </Col>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nconst RegisterErrorMessage = ({ color = \"info\", children }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const timeId = setTimeout(() => {\r\n      setVisible(false);\r\n      localStorage.clear();\r\n    }, 5000);\r\n    return () => {\r\n      clearTimeout(timeId);\r\n    };\r\n  }, [history]);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Alert\r\n        className=\"col-sm-6 m-auto\"\r\n        style={{ textAlign: \"center\" }}\r\n        color={color}\r\n        isOpen={visible}\r\n      >\r\n        <strong>{children}</strong>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterErrorMessage;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loading\";\r\nimport RegisterErrorMessage from \"../RegisterErrorMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Logo from \"../../media/images/logo.png\";\r\nimport { register } from \"../../redux/actions/userActions\";\r\n\r\nimport \"./Register.css\";\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error } = userRegister;\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passowrds Do Not Match\");\r\n    } else {\r\n      dispatch(register(firstName, lastName, userName, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Row className=\"logo-button\">\r\n        <Col>\r\n          <Link to=\"/\">\r\n            <img src={Logo} className=\"logo-sm\" alt=\"logo\" />\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      {message && <RegisterErrorMessage>{message}</RegisterErrorMessage>}\r\n      {error && (\r\n        <RegisterErrorMessage color=\"danger\">{error}</RegisterErrorMessage>\r\n      )}\r\n      {loading && <Loading />}\r\n      <Form className=\"register\" onSubmit={submitHandler}>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup className=\"col-6 float-start pe-2\">\r\n              <Label className=\"label\">First name</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"firstName\"\r\n                type=\"name\"\r\n                placeholder=\"Enter First name\"\r\n                value={firstName}\r\n                autoComplete=\"nope\"\r\n                autoFocus\r\n                onChange={(event) => setFirstName(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"col-6 float-end ps-2\">\r\n              <Label className=\"label\">Last name</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"lastName\"\r\n                type=\"name\"\r\n                placeholder=\"Enter Last name\"\r\n                value={lastName}\r\n                autoComplete=\"nope\"\r\n                onChange={(event) => setLastName(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"col-6 float-start pe-2\">\r\n              <Label className=\"label\">User name</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"userName\"\r\n                type=\"name\"\r\n                placeholder=\"Enter a username\"\r\n                value={userName}\r\n                autoComplete=\"nope\"\r\n                onChange={(event) => setUserName(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"col-6 float-end ps-2\">\r\n              <Label className=\"label\">Email</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                id=\"email\"\r\n                value={email}\r\n                autoComplete=\"nope\"\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"col-6 float-start pe-2\">\r\n              <Label className=\"label\">Password</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                id=\"password\"\r\n                value={password}\r\n                autoComplete=\"nope\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"col-6 float-end ps-2\">\r\n              <Label className=\"label\">Confirm Password</Label>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                value={confirmPassword}\r\n                autoComplete=\"nope\"\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Col className=\"register-button\">\r\n          <Button type=\"submit\" color=\"info\" className=\"mt-4\">\r\n            Register\r\n          </Button>\r\n        </Col>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { updateProfile } from \"../../redux/actions/userActions\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport IssueTracker from \"../IssueTracker/IssueTracker\";\r\nimport Loading from \"../Loading\";\r\n\r\nimport \"./Profile.css\";\r\n\r\nconst Profile = ({ history }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setFirstName(userInfo.firstName);\r\n      setLastName(userInfo.lastName);\r\n      setUserName(userInfo.userName);\r\n      setEmail(userInfo.email);\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password === confirmPassword)\r\n      dispatch(\r\n        updateProfile({ firstName, lastName, userName, email, password })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <IssueTracker title=\"My Profile\">\r\n        <div>\r\n          <Form className=\"profile\" onSubmit={submitHandler}>\r\n            {loading && <Loading />}\r\n            {success && (\r\n              <ErrorMessage color=\"success\">Updated Successfully</ErrorMessage>\r\n            )}\r\n            {error && <ErrorMessage color=\"danger\">{error}</ErrorMessage>}\r\n            <Row>\r\n              <Col>\r\n                <FormGroup className=\"col-6 float-start pe-2\">\r\n                  <Label className=\"label\">First name</Label>\r\n                  <Input\r\n                    className=\"input\"\r\n                    name=\"firstName\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter First name\"\r\n                    value={firstName}\r\n                    autoComplete=\"nope\"\r\n                    autoFocus\r\n                    onChange={(event) => setFirstName(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"col-6 float-end ps-2\">\r\n                  <Label className=\"label\">Last name</Label>\r\n                  <Input\r\n                    className=\"input\"\r\n                    name=\"lastName\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter Last name\"\r\n                    value={lastName}\r\n                    autoComplete=\"nope\"\r\n                    onChange={(event) => setLastName(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"col-6 float-start pe-2\">\r\n                  <Label className=\"label\">User name</Label>\r\n                  <Input\r\n                    className=\"input\"\r\n                    name=\"userName\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter a username\"\r\n                    value={userName}\r\n                    autoComplete=\"nope\"\r\n                    onChange={(event) => setUserName(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"col-6 float-end ps-2\">\r\n                  <Label className=\"label\">Email</Label>\r\n                  <Input\r\n                    className=\"input\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    autoComplete=\"nope\"\r\n                    onChange={(event) => setEmail(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"col-6 float-start pe-2\">\r\n                  <Label className=\"label\">Password</Label>\r\n                  <Input\r\n                    className=\"input\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    autoComplete=\"nope\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"col-6 float-end ps-2\">\r\n                  <Label className=\"label\">Confirm Password</Label>\r\n                  <Input\r\n                    className=\"input\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    value={confirmPassword}\r\n                    autoComplete=\"nope\"\r\n                    onChange={(event) => setConfirmPassword(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Col className=\"register-button\">\r\n              <Button type=\"submit\" color=\"info\" className=\"mt-4\">\r\n                Update\r\n              </Button>\r\n            </Col>\r\n          </Form>\r\n        </div>\r\n      </IssueTracker>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport LandingPage from \"./components/LandingPage/LandingPage\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport CurrentIssue from \"./components/CurrentIssue/CurrentIssue\";\r\nimport AddIssue from \"./components/AddIssue/AddIssue\";\r\nimport UpdateIssue from \"./components/UpdateIssue/UpdateIssue.js\";\r\nimport MyIssues from \"./components/MyIssues/MyIssues\";\r\nimport CompletedIssues from \"./components/CompletedIssues/CompletedIssues\";\r\nimport Login from \"./components/Login/Login.js\";\r\nimport Register from \"./components/Register/Register.js\";\r\n\r\nimport \"./App.css\";\r\nimport Profile from \"./components/Profile/Profile\";\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n  console.log(search);\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Header setSearch={setSearch} />\r\n        <div>\r\n          <Route path=\"/\" component={LandingPage} exact />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <Route\r\n            path=\"/issues\"\r\n            component={() => <CurrentIssue search={search} />}\r\n          />\r\n          <Route path=\"/addIssue\" component={AddIssue} />\r\n          <Route path=\"/issue/:id\" component={UpdateIssue} />\r\n          <Route path=\"/myIssues\" component={MyIssues} />\r\n          <Route path=\"/completedIssues\" component={CompletedIssues} />\r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from \"./redux/reducers/userReducers\";\r\nimport {\r\n  currentIssuesReducer,\r\n  issueCreateReducer,\r\n  issueDeleteReducer,\r\n  issueUpdateReducer,\r\n} from \"./redux/reducers/issuesReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst appReducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userUpdateReducer,\r\n  currentIssues: currentIssuesReducer,\r\n  issueCreate: issueCreateReducer,\r\n  issueUpdate: issueUpdateReducer,\r\n  issueDelete: issueDeleteReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === \"USER_LOGOUT\") {\r\n    return appReducer(undefined, action);\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: true, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CURRENT_ISSUES_REQUEST,\r\n  CURRENT_ISSUES_SUCCESS,\r\n  CURRENT_ISSUES_FAIL,\r\n  ISSUE_CREATE_REQUEST,\r\n  ISSUE_CREATE_SUCCESS,\r\n  ISSUE_CREATE_FAIL,\r\n  ISSUE_UPDATE_REQUEST,\r\n  ISSUE_UPDATE_SUCCESS,\r\n  ISSUE_UPDATE_FAIL,\r\n  ISSUE_DELETE_REQUEST,\r\n  ISSUE_DELETE_SUCCESS,\r\n  ISSUE_DELETE_FAIL,\r\n} from \"../constants/issuesConstants\";\r\n\r\nexport const currentIssuesReducer = (state = { issues: [] }, action) => {\r\n  switch (action.type) {\r\n    case CURRENT_ISSUES_REQUEST:\r\n      return { loading: true };\r\n    case CURRENT_ISSUES_SUCCESS:\r\n      return { loading: false, issues: action.payload };\r\n    case CURRENT_ISSUES_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const issueCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ISSUE_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ISSUE_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ISSUE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const issueUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ISSUE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case ISSUE_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ISSUE_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const issueDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ISSUE_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case ISSUE_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ISSUE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}